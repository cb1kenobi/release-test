name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: The branch to release from
        required: true
        default: main
      version:
        description: Select a new version
        required: true
        default: 'Patch (1.2.10)'
        type: choice
        options:
        - 'Patch (1.2.10)'
        - 'Minor (1.3.0)'
        - 'Major (2.0.0)'
        - 'Prepatch (1.2.10-0)'
        - 'Preminor (1.3.0-0)'
        - 'Premajor (2.0.0-0)'
        - 'Custom Version'
      custom-version:
        description: Custom version
        required: false

jobs:
  publish:
    runs-on: ubuntu-latest
    name: Package and publish
    outputs:
      version: ${{ steps.version.outputs.result }}
      tarball: ${{ steps.tarball.outputs.result }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.branch }}

    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        registry-url: 'https://registry.npmjs.org'

    - name: Get version
      id: current
      run: |
        CURRENT=$(node -p "require('./package.json').version")
        echo "::set-output name=result::$CURRENT"

    - name: Resolve version
      uses: actions/github-script@v6
      id: version
      with:
        script: |
          let version = '${{ github.event.inputs.version }}';
          if (version === 'Custom Version') {
            version = '${{ github.event.inputs.custom-version }}';
          } else {
            version = version.replace(/^\w+ \((.+)\)$/, '$1');
          }

          const releaseMeta = github.rest.repos.listReleases.endpoint.merge({
            owner: context.repo.owner,
            repo: context.repo.repo
          });

          const releases = await github.paginate(releaseMeta);
          for (const release of releases) {
            if (release.name === version) {
              throw new Error(`${version} already exists!`);
            }
          }

          console.log(`Setting version: ${version}`);
          return version;

    - name: Install dependencies
      run: npm i
      if: steps.node-cache.outputs.cache-hit != 'true'

    - name: Bump version and tag
      run: |
        TAG_VERSION=${{ steps.version.outputs.result }}
        npm version "$TAG_VERSION" --no-git-tag-version
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git commit -am "chore(release): bump version ${{ steps.current.outputs.result }} -> $TAG_VERSION"
        git push
        git tag "${TAG_VERSION}"
        git push origin "${TAG_VERSION}"

    - name: Publish to npm
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: npm publish

    - name: Bump workflow
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      run: |
        npm i -g @cb1kenobi/increment-release-yaml
        increment-release-yaml ${{ steps.version.outputs.result }} .github/workflows/release.yml
        git add .github/workflows/release.yml
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git commit -m "chore(release): bump workflow"
        git push https://${{ github.actor }}:${{ secrets.WORKFLOW_TOKEN }}@github.com/${{ github.repository }}.git ${{ github.event.inputs.branch }}
 